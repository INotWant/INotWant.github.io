---
title: "JVM 参数"
layout: post
date: 2019-02-12 21:36
tag:
- JVM
- 参数
category: JVM
author: inotwant
description: JVM 参数笔记
---

1. `-Xms`	--> **设置 Java 堆最小值**
2. `-Xmx`	--> **设置 Java 堆最大值**
3. `-Xmn` --> **设置新生代的大小**
4. `-XX:+HeapDumpOnOutOfMemoryError`	--> **设置内存溢出时 Dump 堆**
5. `-Xss`	--> **设置栈容量**
6. ~~`-Xoss`~~	--> **设置本地方法栈大小**
7. ~~`-XX:PermSize`~~	--> **设置 JVM 初始方法区的大小，JDK1.7开始逐步去永久代**
8. ~~`-XX:MaxPermSize`~~	--> **设置 JVM 方法区的最大大小，JDK1.7开始逐步去永久代**
9. `-XX:MaxDirectMemorySize`	--> **设置 JVM 本机直接内存的最大大小**
10. `-XX:+PrintGC` --> **输出GC日志**
11. `-XX:+PrintGCDetails` --> **输出GC的详细日志**
12. `-XX:+PrintGCTimeStamps` --> **输出GC的时间戳（以基准时间的形式）**
13. `-XX:+PrintGCDateStamps` --> **输出GC的时间戳（以日期的形式，如 2013-05-04T21:53:59.234+0800）**
14. `-XX:+PrintHeapAtGC` --> **在进行GC的前后打印出堆的信息**
15. `-XX:+UseSerialGC` --> **使用 Serial + Serial Old 收集器组合**
16. `-XX:+UseParNewGC` --> **使用 ParNew + Serial Old 收集器组合**
17. `-XX:+UseConcMarkSweepGC` --> **使用 ParNew + CMS + Serial Old 收集器组合**
18. `-XX:+UseParallelGC` --> **使用 PS + Serial Old 收集器组合**
19. `-XX:+UseParallelOldGC` --> **使用 PS + PS Old 收集器组合**
20. `-XX:SurvivorRatio` --> **设置 Eden 与 Survivor 比例，默认为8（指8:1）**
21. `-XX:PretenureSizeThreshold` --> **直接晋升到老年代的对象大小（单位：字节）**
22. `-XX:MaxTenuringThreshold` --> **晋升到老年代的对象年龄，默认15**
23. `-XX:UseAdaptiveSizePolicy` --> **动态调整Java堆中各个区域的大小以及进入老年代的年龄**
24. ~~`-XX:+/-HandlePromotionFailure`~~ --> **设置是否允许分配担保失败**
25. `-XX:ParallelGCThreads` --> **设置并行 GC 的线程数**
26. `-XX:GCTimeRatio` --> **GC时间占总时间的比率，默认值为99，只在使用 PS 收集器时生效**
27. `-XX:MaxGCPauseMillis` --> **设置GC的最大停顿时间，只在使用 PS 收集器时生效**
28. `-XX:CMSInitiatingOccupancyFraction` --> **CMS收集器在老年代空间被使用多少后触发垃圾收集，默认值为68%，只在使用 CMS 收集器时生效**
29. `-XX:UseCMSCompactAtFullCollection` --> **设置CMS收集器在完成垃圾收集后是否要进行一次内存碎片整理**
30. `-XX:CMSFullGCsBeforeCompaction` --> **设置CMS收集器在进行若干此垃圾收集后再启动一次内存碎片整理**
31. `-verbose:gc` --> **等价于 -XX:+PrintGC**
32. `-Dcom.sun.management.jmxremote`	--> **使 JDK1.5 虚拟机开启 JMX（`Java Management Extensions`） 管理功能，更高版本默认开启**
33. `-XX:+HeapDumpOnCtrlBreak` --> **设置使用[Ctrl]+[Break]键让虚拟机生产 dump 文件**
34. ~~`-Xcomp`~~	--> **让虚拟机以编译模式执行代码**
35. `-XX:PrintAssembly`	--> **输出反编译内容**
36. `-Xshare:off`	--> **关闭类共享优化，在使用 visualvm-profiler 分析时可以用到**
37. `-XX:+PrintFlagsFinal`	--> **查看 JVM 所有参数的值，需要 JDK6 及以上**
38. `-XX:+DisableExplicitGC`	--> **屏蔽明确GC，如 System.gc()**
39. `-XX:+AlwaysTenure`	--> **表示没有幸存区，所有对象在第一次 GC 时，会晋升到老年代**
40. `-XX:+NeverTenure`	--> **对象永远不会晋升到老年代，可能不起作用**
41. `-Dsun.awt.keepWorkingSetOnMinimize=true`	--> **避免 awt 程序在最小化时工作内存被交换至磁盘文件中**
42. `-Xverify:none`	--> **禁止字节码校验过程**
43. `-Xint`	--> **禁止 JIT 编译器运作**
44. `-Xnoclassgs`	--> **关闭 Class 的垃圾回收**